# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import chat_pb2 as chat__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in chat_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLeaderInfo = channel.unary_unary(
                '/ChatService/GetLeaderInfo',
                request_serializer=chat__pb2.GetLeaderInfoRequest.SerializeToString,
                response_deserializer=chat__pb2.GetLeaderInfoResponse.FromString,
                _registered_method=True)
        self.SaveGameState = channel.unary_unary(
                '/ChatService/SaveGameState',
                request_serializer=chat__pb2.SaveGameStateRequest.SerializeToString,
                response_deserializer=chat__pb2.SaveGameStateResponse.FromString,
                _registered_method=True)
        self.LoadGameState = channel.unary_unary(
                '/ChatService/LoadGameState',
                request_serializer=chat__pb2.LoadGameStateRequest.SerializeToString,
                response_deserializer=chat__pb2.LoadGameStateResponse.FromString,
                _registered_method=True)
        self.CheckVersion = channel.unary_unary(
                '/ChatService/CheckVersion',
                request_serializer=chat__pb2.Version.SerializeToString,
                response_deserializer=chat__pb2.VersionResponse.FromString,
                _registered_method=True)


class ChatServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetLeaderInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveGameState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadGameState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLeaderInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLeaderInfo,
                    request_deserializer=chat__pb2.GetLeaderInfoRequest.FromString,
                    response_serializer=chat__pb2.GetLeaderInfoResponse.SerializeToString,
            ),
            'SaveGameState': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveGameState,
                    request_deserializer=chat__pb2.SaveGameStateRequest.FromString,
                    response_serializer=chat__pb2.SaveGameStateResponse.SerializeToString,
            ),
            'LoadGameState': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadGameState,
                    request_deserializer=chat__pb2.LoadGameStateRequest.FromString,
                    response_serializer=chat__pb2.LoadGameStateResponse.SerializeToString,
            ),
            'CheckVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckVersion,
                    request_deserializer=chat__pb2.Version.FromString,
                    response_serializer=chat__pb2.VersionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ChatService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetLeaderInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ChatService/GetLeaderInfo',
            chat__pb2.GetLeaderInfoRequest.SerializeToString,
            chat__pb2.GetLeaderInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SaveGameState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ChatService/SaveGameState',
            chat__pb2.SaveGameStateRequest.SerializeToString,
            chat__pb2.SaveGameStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadGameState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ChatService/LoadGameState',
            chat__pb2.LoadGameStateRequest.SerializeToString,
            chat__pb2.LoadGameStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ChatService/CheckVersion',
            chat__pb2.Version.SerializeToString,
            chat__pb2.VersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ReplicationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReplicateSaveGameState = channel.unary_unary(
                '/ReplicationService/ReplicateSaveGameState',
                request_serializer=chat__pb2.ReplicateSaveGameStateRequest.SerializeToString,
                response_deserializer=chat__pb2.ReplicateSaveGameStateResponse.FromString,
                _registered_method=True)


class ReplicationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ReplicateSaveGameState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReplicationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReplicateSaveGameState': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicateSaveGameState,
                    request_deserializer=chat__pb2.ReplicateSaveGameStateRequest.FromString,
                    response_serializer=chat__pb2.ReplicateSaveGameStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ReplicationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ReplicationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ReplicationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ReplicateSaveGameState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ReplicationService/ReplicateSaveGameState',
            chat__pb2.ReplicateSaveGameStateRequest.SerializeToString,
            chat__pb2.ReplicateSaveGameStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class HealthStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/Health/Ping',
                request_serializer=chat__pb2.PingRequest.SerializeToString,
                response_deserializer=chat__pb2.PingResponse.FromString,
                _registered_method=True)


class HealthServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HealthServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=chat__pb2.PingRequest.FromString,
                    response_serializer=chat__pb2.PingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Health', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Health', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Health(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Health/Ping',
            chat__pb2.PingRequest.SerializeToString,
            chat__pb2.PingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
