syntax = "proto3";

package spotit;

service SpotItGameService {
    // Create a new game
    rpc CreateGame(CreateGameRequest) returns (CreateGameResponse);
    // Join an existing game
    rpc JoinGame(JoinGameRequest) returns (JoinGameResponse);
    // Get game state (cards, players, etc.)
    rpc GetGameState(GameStateRequest) returns (GameStateResponse);
    // Player plays a turn (clicks a match)
    rpc PlayTurn(PlayTurnRequest) returns (PlayTurnResponse);
    // List active games
    rpc ListGames(ListGamesRequest) returns (ListGamesResponse);
}

// --- Messages ---
message CreateGameRequest {
    string host_player = 1;
    int32 num_players = 2;
}
message CreateGameResponse {
    string game_id = 1;
    string message = 2;
}

message JoinGameRequest {
    string game_id = 1;
    string player_name = 2;
}
message JoinGameResponse {
    bool success = 1;
    string message = 2;
}

message GameStateRequest {
    string game_id = 1;
}
message GameStateResponse {
    string game_id = 1;
    repeated string player_names = 2;
    repeated Card cards = 3;
    // string current_turn = 4; // REMOVED: not used in speed-based version
    string status = 4;
}

message PlayTurnRequest {
    string game_id = 1;
    string player_name = 2;
    int32 card_index = 3;
    int32 emoji_index = 4;
}
message PlayTurnResponse {
    bool success = 1;
    string message = 2;
    GameStateResponse updated_state = 3;
}

message ListGamesRequest {}
message ListGamesResponse {
    repeated string game_ids = 1;
}

message Card {
    repeated string emojis = 1;
}
